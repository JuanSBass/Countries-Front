{"ast":null,"code":"import { GET_COUNTRIE, GET_COUNTRIE_DETAIL, ADD_ACTIVITY, REMOVE_ACTIVITY, GET_ALL_COUNTRIES, FILTER_BY_CONTINENT, FILTER_BY_ACTIVITY, ORDER_BY_NAME, ORDER_BY_POPULATION } from \"../actions\";\nconst initialState = {\n  activities: [],\n  //? Acá agrega las actividades\n  countries: [],\n  //? carga los paises buscados\n  copyCountries: [],\n  //? Apoyo para el filter\n  countryDetail: {} //? Carga toda la data en un obj\n\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === GET_ALL_COUNTRIES) {\n    return { ...state,\n      countries: action.payload,\n      copyCountries: action.payload\n    };\n  }\n\n  if (action.type === GET_COUNTRIE) {\n    return { ...state,\n      countries: action.payload\n    };\n  }\n\n  if (action.type === REMOVE_ACTIVITY) {\n    return { ...state,\n      activities: state.activities.filter(m => m.id !== action.payload)\n    };\n  }\n\n  if (action.type === GET_COUNTRIE_DETAIL) {\n    return { ...state,\n      countryDetail: action.payload\n    };\n  }\n\n  if (action.type === ADD_ACTIVITY) {\n    return { ...state,\n      activities: state.activities.concat(action.payload)\n    };\n  } //? <--------- Filters -------->\n\n\n  if (action.type === FILTER_BY_CONTINENT) {\n    const allCountries = state.copyCountries;\n    const filteredByContinent = action.payload === \"All\" ? allCountries : allCountries.filter(c => c.continent === action.payload);\n    return { ...state,\n      countries: filteredByContinent\n    };\n  }\n\n  if (action.type === FILTER_BY_ACTIVITY) {\n    const allCountries = state.copyCountries;\n    const filteredActivities = action.payload === \"All\" ? allCountries : allCountries.filter(c => c.activities.length > 0);\n    return { ...state,\n      countries: filteredActivities\n    };\n  } //? <--------- Orders -------->\n\n\n  if (action.type === ORDER_BY_NAME) {\n    if (action.payload === \"asc\") {\n      state.countries.sort(function (a, b) {\n        if (a.name > b.name) return 1;\n        if (b.name > a.name) return -1;\n        return 0;\n      });\n    } else if (action.payload === \"des\") {\n      state.countries.sort(function (a, b) {\n        if (a.name > b.name) return -1;\n        if (b.name > a.name) return 1;\n        return 0;\n      });\n    } else state.countries.sort(function (a, b) {\n      state.countries.sort(function (a, b) {\n        if (a.population > b.population) return -1;\n        if (b.population > a.population) return 1;\n        return 0;\n      });\n    });\n  }\n\n  if (action.type === ORDER_BY_POPULATION) {\n    let sortedArr = state.countries.sort(function (a, b) {\n      if (a.population > b.population) return -1;\n      if (b.population > b.population) return 1;\n      return 0;\n    });\n    return { ...state,\n      countries: sortedArr\n    };\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"names":["GET_COUNTRIE","GET_COUNTRIE_DETAIL","ADD_ACTIVITY","REMOVE_ACTIVITY","GET_ALL_COUNTRIES","FILTER_BY_CONTINENT","FILTER_BY_ACTIVITY","ORDER_BY_NAME","ORDER_BY_POPULATION","initialState","activities","countries","copyCountries","countryDetail","rootReducer","state","action","type","payload","filter","m","id","concat","allCountries","filteredByContinent","c","continent","filteredActivities","length","sort","a","b","name","population","sortedArr"],"sources":["D:/HENRY CLASES/PI-Countries-main/client/src/reducers/index.js"],"sourcesContent":["import {\r\n  GET_COUNTRIE,\r\n  GET_COUNTRIE_DETAIL,\r\n  ADD_ACTIVITY,\r\n  REMOVE_ACTIVITY,\r\n  GET_ALL_COUNTRIES,\r\n  FILTER_BY_CONTINENT,\r\n  FILTER_BY_ACTIVITY,\r\n  ORDER_BY_NAME,\r\n  ORDER_BY_POPULATION,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  activities: [], //? Acá agrega las actividades\r\n  countries: [], //? carga los paises buscados\r\n  copyCountries: [], //? Apoyo para el filter\r\n  countryDetail: {}, //? Carga toda la data en un obj\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === GET_ALL_COUNTRIES) {\r\n    return {\r\n      ...state,\r\n      countries: action.payload,\r\n      copyCountries: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_COUNTRIE) {\r\n    return {\r\n      ...state,\r\n      countries: action.payload,\r\n    };\r\n  }\r\n  if (action.type === REMOVE_ACTIVITY) {\r\n    return {\r\n      ...state,\r\n      activities: state.activities.filter((m) => m.id !== action.payload),\r\n    };\r\n  }\r\n  if (action.type === GET_COUNTRIE_DETAIL) {\r\n    return {\r\n      ...state,\r\n      countryDetail: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_ACTIVITY) {\r\n    return {\r\n      ...state,\r\n      activities: state.activities.concat(action.payload),\r\n    };\r\n  }\r\n\r\n  //? <--------- Filters -------->\r\n\r\n  if (action.type === FILTER_BY_CONTINENT) {\r\n    const allCountries = state.copyCountries;\r\n    const filteredByContinent =\r\n      action.payload === \"All\"\r\n        ? allCountries\r\n        : allCountries.filter((c) => c.continent === action.payload);\r\n    return {\r\n      ...state,\r\n      countries: filteredByContinent,\r\n    };\r\n  }\r\n\r\n  if (action.type === FILTER_BY_ACTIVITY) {\r\n    const allCountries = state.copyCountries;\r\n    const filteredActivities =\r\n      action.payload === \"All\"\r\n        ? allCountries\r\n        : allCountries.filter((c) => c.activities.length > 0);\r\n    return {\r\n      ...state,\r\n      countries: filteredActivities,\r\n    };\r\n  }\r\n\r\n  //? <--------- Orders -------->\r\n\r\n  if (action.type === ORDER_BY_NAME) {\r\n    if (action.payload === \"asc\") {\r\n      state.countries.sort(function (a, b) {\r\n        if (a.name > b.name) return 1;\r\n        if (b.name > a.name) return -1;\r\n        return 0;\r\n      });\r\n    } else if (action.payload === \"des\") {\r\n      state.countries.sort(function (a, b) {\r\n        if (a.name > b.name) return -1;\r\n        if (b.name > a.name) return 1;\r\n        return 0;\r\n      });\r\n    } else state.countries.sort(function (a, b) {\r\n      state.countries.sort(function (a, b) {\r\n        if(a.population > b.population) return -1;\r\n        if(b.population > a.population) return 1;\r\n        return 0\r\n      });\r\n    });\r\n  }\r\n\r\n  if (action.type === ORDER_BY_POPULATION) {\r\n    let sortedArr = state.countries.sort(function (a, b) {\r\n      if (a.population > b.population) return -1;\r\n      if (b.population > b.population) return 1;\r\n      return 0;\r\n    });\r\n    return {\r\n      ...state,\r\n      countries: sortedArr,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SACEA,YADF,EAEEC,mBAFF,EAGEC,YAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,mBANF,EAOEC,kBAPF,EAQEC,aARF,EASEC,mBATF,QAUO,YAVP;AAYA,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,EADO;EACH;EAChBC,SAAS,EAAE,EAFQ;EAEJ;EACfC,aAAa,EAAE,EAHI;EAGA;EACnBC,aAAa,EAAE,EAJI,CAIA;;AAJA,CAArB;;AAOA,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBN,YAAsB;EAAA,IAARO,MAAQ;;EACjD,IAAIA,MAAM,CAACC,IAAP,KAAgBb,iBAApB,EAAuC;IACrC,OAAO,EACL,GAAGW,KADE;MAELJ,SAAS,EAAEK,MAAM,CAACE,OAFb;MAGLN,aAAa,EAAEI,MAAM,CAACE;IAHjB,CAAP;EAKD;;EACD,IAAIF,MAAM,CAACC,IAAP,KAAgBjB,YAApB,EAAkC;IAChC,OAAO,EACL,GAAGe,KADE;MAELJ,SAAS,EAAEK,MAAM,CAACE;IAFb,CAAP;EAID;;EACD,IAAIF,MAAM,CAACC,IAAP,KAAgBd,eAApB,EAAqC;IACnC,OAAO,EACL,GAAGY,KADE;MAELL,UAAU,EAAEK,KAAK,CAACL,UAAN,CAAiBS,MAAjB,CAAyBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAA/C;IAFP,CAAP;EAID;;EACD,IAAIF,MAAM,CAACC,IAAP,KAAgBhB,mBAApB,EAAyC;IACvC,OAAO,EACL,GAAGc,KADE;MAELF,aAAa,EAAEG,MAAM,CAACE;IAFjB,CAAP;EAID;;EACD,IAAIF,MAAM,CAACC,IAAP,KAAgBf,YAApB,EAAkC;IAChC,OAAO,EACL,GAAGa,KADE;MAELL,UAAU,EAAEK,KAAK,CAACL,UAAN,CAAiBY,MAAjB,CAAwBN,MAAM,CAACE,OAA/B;IAFP,CAAP;EAID,CA/BgD,CAiCjD;;;EAEA,IAAIF,MAAM,CAACC,IAAP,KAAgBZ,mBAApB,EAAyC;IACvC,MAAMkB,YAAY,GAAGR,KAAK,CAACH,aAA3B;IACA,MAAMY,mBAAmB,GACvBR,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACIK,YADJ,GAEIA,YAAY,CAACJ,MAAb,CAAqBM,CAAD,IAAOA,CAAC,CAACC,SAAF,KAAgBV,MAAM,CAACE,OAAlD,CAHN;IAIA,OAAO,EACL,GAAGH,KADE;MAELJ,SAAS,EAAEa;IAFN,CAAP;EAID;;EAED,IAAIR,MAAM,CAACC,IAAP,KAAgBX,kBAApB,EAAwC;IACtC,MAAMiB,YAAY,GAAGR,KAAK,CAACH,aAA3B;IACA,MAAMe,kBAAkB,GACtBX,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACIK,YADJ,GAEIA,YAAY,CAACJ,MAAb,CAAqBM,CAAD,IAAOA,CAAC,CAACf,UAAF,CAAakB,MAAb,GAAsB,CAAjD,CAHN;IAIA,OAAO,EACL,GAAGb,KADE;MAELJ,SAAS,EAAEgB;IAFN,CAAP;EAID,CAzDgD,CA2DjD;;;EAEA,IAAIX,MAAM,CAACC,IAAP,KAAgBV,aAApB,EAAmC;IACjC,IAAIS,MAAM,CAACE,OAAP,KAAmB,KAAvB,EAA8B;MAC5BH,KAAK,CAACJ,SAAN,CAAgBkB,IAAhB,CAAqB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QACnC,IAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAP;QACrB,IAAID,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB,OAAO,CAAC,CAAR;QACrB,OAAO,CAAP;MACD,CAJD;IAKD,CAND,MAMO,IAAIhB,MAAM,CAACE,OAAP,KAAmB,KAAvB,EAA8B;MACnCH,KAAK,CAACJ,SAAN,CAAgBkB,IAAhB,CAAqB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QACnC,IAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAC,CAAR;QACrB,IAAID,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB,OAAO,CAAP;QACrB,OAAO,CAAP;MACD,CAJD;IAKD,CANM,MAMAjB,KAAK,CAACJ,SAAN,CAAgBkB,IAAhB,CAAqB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;MAC1ChB,KAAK,CAACJ,SAAN,CAAgBkB,IAAhB,CAAqB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QACnC,IAAGD,CAAC,CAACG,UAAF,GAAeF,CAAC,CAACE,UAApB,EAAgC,OAAO,CAAC,CAAR;QAChC,IAAGF,CAAC,CAACE,UAAF,GAAeH,CAAC,CAACG,UAApB,EAAgC,OAAO,CAAP;QAChC,OAAO,CAAP;MACD,CAJD;IAKD,CANM;EAOR;;EAED,IAAIjB,MAAM,CAACC,IAAP,KAAgBT,mBAApB,EAAyC;IACvC,IAAI0B,SAAS,GAAGnB,KAAK,CAACJ,SAAN,CAAgBkB,IAAhB,CAAqB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;MACnD,IAAID,CAAC,CAACG,UAAF,GAAeF,CAAC,CAACE,UAArB,EAAiC,OAAO,CAAC,CAAR;MACjC,IAAIF,CAAC,CAACE,UAAF,GAAeF,CAAC,CAACE,UAArB,EAAiC,OAAO,CAAP;MACjC,OAAO,CAAP;IACD,CAJe,CAAhB;IAKA,OAAO,EACL,GAAGlB,KADE;MAELJ,SAAS,EAAEuB;IAFN,CAAP;EAID;;EAED,OAAOnB,KAAP;AACD;;AAED,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}