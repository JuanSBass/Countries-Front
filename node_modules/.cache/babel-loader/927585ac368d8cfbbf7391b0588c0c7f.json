{"ast":null,"code":"import { GET_COUNTRIE, GET_COUNTRIE_DETAIL, ADD_ACTIVITY, REMOVE_ACTIVITY, GET_ALL_COUNTRIES, FILTER_BY_CONTINENT, FILTER_BY_ACTIVITY, ORDER_BY_NAME } from \"../actions\";\nconst initialState = {\n  activities: [],\n  //? Acá agrega las actividades\n  countries: [],\n  //? carga los paises buscados\n  copyCountries: [],\n  //? Apoyo para el filter\n  countryDetail: {} //? Carga toda la data en un obj \n\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === GET_ALL_COUNTRIES) {\n    return { ...state,\n      countries: action.payload,\n      copyCountries: action.payload\n    };\n  }\n\n  if (action.type === GET_COUNTRIE) {\n    return { ...state,\n      countries: action.payload\n    };\n  }\n\n  if (action.type === REMOVE_ACTIVITY) {\n    return { ...state,\n      activities: state.activities.filter(m => m.id !== action.payload)\n    };\n  }\n\n  if (action.type === GET_COUNTRIE_DETAIL) {\n    return { ...state,\n      countryDetail: action.payload\n    };\n  }\n\n  if (action.type === ADD_ACTIVITY) {\n    return { ...state,\n      activities: state.activities.concat(action.payload)\n    };\n  } //? <--------- Filters -------->\n\n\n  if (action.type === FILTER_BY_CONTINENT) {\n    const allCountries = state.copyCountries;\n    const filteredByContinent = action.payload === \"All\" ? allCountries : allCountries.filter(c => c.continent === action.payload);\n    return { ...state,\n      countries: filteredByContinent\n    };\n  }\n\n  if (action.type === FILTER_BY_ACTIVITY) {\n    const allCountries = state.copyCountries;\n    const filteredActivities = action.payload === \"All\" ? allCountries : allCountries.filter(c => c.activities.length > 0);\n    return { ...state,\n      countries: filteredActivities\n    };\n  } //? <--------- Orders -------->\n\n\n  if (action.type === ORDER_BY_NAME) {\n    let sortedArr = action.payload === \"asc\" ? state.countries.sort(function (a, b) {\n      if (a.name > b.name) return 1;\n      if (b.name > a.name) return -1;\n      return 0;\n    }) : state.countries.sort(function (a, b) {\n      if (a.name > b.name) return -1;\n      if (b.name > b.name) return 1;\n      return 0;\n    });\n    return { ...state,\n      countries: sortedArr\n    };\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"names":["GET_COUNTRIE","GET_COUNTRIE_DETAIL","ADD_ACTIVITY","REMOVE_ACTIVITY","GET_ALL_COUNTRIES","FILTER_BY_CONTINENT","FILTER_BY_ACTIVITY","ORDER_BY_NAME","initialState","activities","countries","copyCountries","countryDetail","rootReducer","state","action","type","payload","filter","m","id","concat","allCountries","filteredByContinent","c","continent","filteredActivities","length","sortedArr","sort","a","b","name"],"sources":["D:/HENRY CLASES/PI-Countries-main/client/src/reducers/index.js"],"sourcesContent":["import { \r\n  GET_COUNTRIE,\r\n  GET_COUNTRIE_DETAIL,\r\n  ADD_ACTIVITY,\r\n  REMOVE_ACTIVITY,\r\n  GET_ALL_COUNTRIES,\r\n  FILTER_BY_CONTINENT,\r\n  FILTER_BY_ACTIVITY,\r\n  ORDER_BY_NAME\r\n} from \"../actions\";\r\n\r\n\r\nconst initialState = {\r\n  activities: [],         //? Acá agrega las actividades\r\n  countries: [],   //? carga los paises buscados\r\n  copyCountries: [], //? Apoyo para el filter\r\n  countryDetail: {},    //? Carga toda la data en un obj \r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if(action.type === GET_ALL_COUNTRIES){\r\n    return{\r\n      ...state,\r\n      countries: action.payload,\r\n      copyCountries: action.payload\r\n    }\r\n  }\r\n  if (action.type === GET_COUNTRIE) {\r\n      return {\r\n        ...state,\r\n        countries: action.payload\r\n      };\r\n  }\r\n  if(action.type === REMOVE_ACTIVITY){\r\n    return {\r\n      ...state,\r\n      activities: state.activities.filter(m => m.id !== action.payload)\r\n    }\r\n  }\r\n  if (action.type === GET_COUNTRIE_DETAIL){\r\n    return{\r\n      ...state,\r\n      countryDetail: action.payload\r\n    }\r\n  }\r\n  if (action.type === ADD_ACTIVITY){\r\n    return {\r\n      ...state,\r\n      activities: state.activities.concat(action.payload)\r\n    }\r\n  }\r\n\r\n  //? <--------- Filters -------->\r\n\r\n  if (action.type === FILTER_BY_CONTINENT){\r\n    const allCountries = state.copyCountries;\r\n    const filteredByContinent = action.payload === \"All\" ?\r\n    allCountries :\r\n    allCountries.filter(c => c.continent === action.payload);\r\n    return {\r\n      ...state,\r\n      countries: filteredByContinent\r\n    }\r\n  }\r\n\r\n  if(action.type === FILTER_BY_ACTIVITY){\r\n    const allCountries = state.copyCountries;\r\n    const filteredActivities = action.payload === \"All\" ?\r\n    allCountries :\r\n    allCountries.filter(c => c.activities.length > 0);\r\n    return {\r\n      ...state,\r\n      countries: filteredActivities\r\n    }\r\n  }\r\n\r\n  //? <--------- Orders -------->\r\n\r\n  if (action.type === ORDER_BY_NAME){\r\n    let sortedArr = action.payload === \"asc\" ?\r\n    state.countries.sort(function (a, b){\r\n      if(a.name > b.name) return 1;\r\n      if(b.name > a.name) return -1;\r\n      return 0;\r\n    }) :\r\n    state.countries.sort(function (a, b){\r\n      if(a.name > b.name) return -1;\r\n      if(b.name > b.name) return 1;\r\n      return 0;\r\n    })\r\n    return {\r\n      ...state,\r\n      countries: sortedArr\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}